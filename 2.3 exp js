html code :
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Interactive SVG Drawing Tool</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background: #f5f5f5;
    }
    svg {
      border: 2px solid black;
      background: white;
      cursor: crosshair;
    }
  </style>
</head>
<body>
  <svg id="drawingArea" width="800" height="500"></svg>
  <script src="practice 3.js"></script>
</body>
</html>
js code :
const svg = document.getElementById("drawingArea");
let isDrawing = false;
let rect = null;
let startX = 0;
let startY = 0;

svg.addEventListener("mousedown", (e) => {
  isDrawing = true;
  startX = e.offsetX;
  startY = e.offsetY;

  rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  rect.setAttribute("x", startX);
  rect.setAttribute("y", startY);
  rect.setAttribute("width", 0);
  rect.setAttribute("height", 0);
  rect.setAttribute("stroke", "black");
  rect.setAttribute("fill", "transparent");
  rect.setAttribute("stroke-width", 2);
  svg.appendChild(rect);
});

svg.addEventListener("mousemove", (e) => {
  if (!isDrawing) return;

  let currentX = e.offsetX;
  let currentY = e.offsetY;

  let width = Math.abs(currentX - startX);
  let height = Math.abs(currentY - startY);

  rect.setAttribute("width", width);
  rect.setAttribute("height", height);

  rect.setAttribute("x", Math.min(currentX, startX));
  rect.setAttribute("y", Math.min(currentY, startY));
});

svg.addEventListener("mouseup", () => {
  isDrawing = false;
  rect = null; // reset for next drawing
});
